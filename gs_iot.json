[
    {
        "id": "08949273c3324c84",
        "type": "tab",
        "label": "gs_iot",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5f1a9abc26808c94",
        "type": "ui_text",
        "z": "08949273c3324c84",
        "group": "5ab43dafaaa5f29f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "text-align: left;",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 100,
        "wires": []
    },
    {
        "id": "594d05e4d425d3b5",
        "type": "ui_chart",
        "z": "08949273c3324c84",
        "name": "",
        "group": "5ab43dafaaa5f29f",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5877d8322c80b78d",
        "type": "debug",
        "z": "08949273c3324c84",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 240,
        "wires": []
    },
    {
        "id": "3ca277d9f11677a0",
        "type": "json",
        "z": "08949273c3324c84",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 140,
        "wires": [
            [
                "1c5741cb056ba707",
                "4fe17aeb82ed519b",
                "582962678bbe585d"
            ]
        ]
    },
    {
        "id": "1c5741cb056ba707",
        "type": "debug",
        "z": "08949273c3324c84",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "4fe17aeb82ed519b",
        "type": "function",
        "z": "08949273c3324c84",
        "name": "function 1",
        "func": "// Parse a mensagem JSON recebida\nlet data = JSON.parse(msg.payload);\n\n// Verifique se o campo \"valorLDR(quantidade de luz)\" existe\nif (data[\"valorLDR(quantidade de luz)\"] !== undefined) {\n    msg.topic = \"LDR\"; // Nome da série no gráfico\n    msg.payload = data[\"valorLDR(quantidade de luz)\"]; // Valor a ser plotado\n    return msg;\n} else {\n    // Caso o JSON não contenha \"valorLDR(quantidade de luz)\", ignore a mensagem\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 20,
        "wires": [
            [
                "594d05e4d425d3b5",
                "a15c289e25d05ee0"
            ]
        ]
    },
    {
        "id": "a15c289e25d05ee0",
        "type": "debug",
        "z": "08949273c3324c84",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 20,
        "wires": []
    },
    {
        "id": "582962678bbe585d",
        "type": "function",
        "z": "08949273c3324c84",
        "name": "function 2",
        "func": "// Parse a mensagem JSON recebida\nlet data = JSON.parse(msg.payload);\n\n// Verifique se o campo \"valorLDR(quantidade de luz)\" existe\nif (data[\"valorLDR(quantidade de luz)\"] !== undefined) {\n    // Formate a mensagem como \"valorLDR(quantidade de luz): 2965\"\n    msg.payload = \"ValorLDR(quantidade de luz): \" + data[\"valorLDR(quantidade de luz)\"];\n\n    // Garantir que o tipo de mensagem seja uma string\n    msg.payload = String(msg.payload);\n\n    return msg;\n} else {\n    // Caso o JSON não contenha \"valorLDR(quantidade de luz)\", ignore a mensagem\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 100,
        "wires": [
            [
                "5f1a9abc26808c94"
            ]
        ]
    },
    {
        "id": "0c52b604bccb6bbb",
        "type": "mqtt in",
        "z": "08949273c3324c84",
        "name": "gs",
        "topic": "sensor/luz",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2186255c0d84060c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "3ca277d9f11677a0",
                "5877d8322c80b78d"
            ]
        ]
    },
    {
        "id": "321937bfc244d0cc",
        "type": "mqtt out",
        "z": "08949273c3324c84",
        "name": "gs",
        "topic": "comando/luz",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2186255c0d84060c",
        "x": 650,
        "y": 380,
        "wires": []
    },
    {
        "id": "c0821f6215341970",
        "type": "ui_text_input",
        "z": "08949273c3324c84",
        "name": "",
        "label": "Feedback",
        "tooltip": "",
        "group": "5ab43dafaaa5f29f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 460,
        "y": 380,
        "wires": [
            [
                "b87efe945f0fb0c2",
                "321937bfc244d0cc"
            ]
        ]
    },
    {
        "id": "b87efe945f0fb0c2",
        "type": "debug",
        "z": "08949273c3324c84",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 440,
        "wires": []
    },
    {
        "id": "5ab43dafaaa5f29f",
        "type": "ui_group",
        "name": "Controle de Geração de Energia",
        "tab": "5f82f228d815ca60",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2186255c0d84060c",
        "type": "mqtt-broker",
        "name": "gs",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5f82f228d815ca60",
        "type": "ui_tab",
        "name": "Sol Rural",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]